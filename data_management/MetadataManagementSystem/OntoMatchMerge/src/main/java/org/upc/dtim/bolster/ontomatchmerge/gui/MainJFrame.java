/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.upc.dtim.bolster.ontomatchmerge.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

import org.upc.dtim.bolster.ontomatchmerge.extraction.ioartifacts.IOArtifact;
import org.upc.dtim.bolster.ontomatchmerge.main.OntologyConstructionCoordinator;

/**
 *
 * @author Rizkallah
 */
public class MainJFrame extends javax.swing.JFrame {

    private OntologyConstructionCoordinator ontoConstrCoord;

    /**
     * Creates new form MainGUI
     */
    public MainJFrame() {
        ontoConstrCoord = new OntologyConstructionCoordinator();
        initComponents();
        centerWindow();

        owlFileChooser.addChoosableFileFilter(new FileFilter() {
            @Override
            public String getDescription() {
                return "OWL Ontologies (*.owl)";
            }

            @Override
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().toLowerCase().endsWith(".owl");
            }
        });

        mappingFileChooser.addChoosableFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                return f.isDirectory() || f.getName().toLowerCase().endsWith(".xml");
            }

            @Override
            public String getDescription() {
                return "XML Mappings (*.xml)";
            }

        });
        // Set frame to full screen
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    private void centerWindow() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        owlFileChooser = new javax.swing.JFileChooser();
        mappingFileChooser = new javax.swing.JFileChooser();
        mainPanel = new javax.swing.JPanel();
        addNewSourceButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataSourcesList = new javax.swing.JList();
        runProjectButton = new javax.swing.JButton();
        projectNameTextField = new javax.swing.JTextField();
        projectNameLabel = new javax.swing.JLabel();
        dataSourcesLabel = new javax.swing.JLabel();
        errorMessageLabel = new javax.swing.JLabel();
        existingOWLLabel = new javax.swing.JLabel();
        existingOWLTextField = new javax.swing.JTextField();
        owlFileChooserButton = new javax.swing.JButton();
        mappingExistingLabel = new javax.swing.JLabel();
        existingMappingTextField = new javax.swing.JTextField();
        mappingFileChooserButton = new javax.swing.JButton();

        owlFileChooser.setAcceptAllFileFilterUsed(false);

        mappingFileChooser.setAcceptAllFileFilterUsed(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ontology Construction Project");

        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ontology Construction Project"));

        addNewSourceButton.setText("Add New Source");
        addNewSourceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewSourceButtonActionPerformed(evt);
            }
        });

        dataSourcesList.setFixedCellWidth(284);
        jScrollPane1.setViewportView(dataSourcesList);

        runProjectButton.setText("Run Project");
        runProjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runProjectButtonActionPerformed(evt);
            }
        });

        projectNameLabel.setText("Project Name");

        dataSourcesLabel.setText("Data Sources");

        errorMessageLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        existingOWLLabel.setText("Existing OWL");

        owlFileChooserButton.setText("...");
        owlFileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                owlFileChooserButtonActionPerformed(evt);
            }
        });

        mappingExistingLabel.setText("Existing Mapping");

        mappingFileChooserButton.setText("...");
        mappingFileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mappingFileChooserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorMessageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(dataSourcesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addComponent(addNewSourceButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(runProjectButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addComponent(existingOWLLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(existingOWLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(owlFileChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(projectNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(mappingExistingLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(existingMappingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mappingFileChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectNameLabel)
                    .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataSourcesLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingOWLLabel)
                    .addComponent(existingOWLTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(owlFileChooserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mappingExistingLabel)
                    .addComponent(existingMappingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mappingFileChooserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runProjectButton)
                    .addComponent(addNewSourceButton))
                .addGap(8, 8, 8)
                .addComponent(errorMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runProjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runProjectButtonActionPerformed
        errorMessageLabel.setText("");
        if (projectNameTextField.getText().equals("")) {
            errorMessageLabel.setText("Field 'Project Name' cannot be empty");
        } else if (ontoConstrCoord.getSources().size() < 2) { ///XXX ER This was corrected from 0 to < 2
            errorMessageLabel.setText("Project must have at least two data sources");
        } else if ((!this.existingOWLTextField.getText().equalsIgnoreCase("") && this.existingMappingTextField.getText().equalsIgnoreCase(""))
                && (this.existingOWLTextField.getText().equalsIgnoreCase("") && !this.existingMappingTextField.getText().equalsIgnoreCase(""))) {
            errorMessageLabel.setText("Both files (OWL and Mapping) must be indicated");
        } else {
            ontoConstrCoord.setProjectName(projectNameTextField.getText());

            ///XXX ER Added to manage previous ontology
            if (!this.existingOWLTextField.getText().equalsIgnoreCase("") && !this.existingMappingTextField.getText().equalsIgnoreCase("")) {
                ontoConstrCoord.addPreviousOWL(this.existingOWLTextField.getText(), this.existingMappingTextField.getText());
            }
            ///XXX ER End added
            
            errorMessageLabel.setForeground(new Color((float) 0.0, (float) 0.85, (float) 0.0));
            errorMessageLabel.setText("Project started succesfully!");

            //ontoConstrCoord.runOntologyConstructionProcess();
            TaskProgressDialog projProgDialog = new TaskProgressDialog(this, true);
        }
    }//GEN-LAST:event_runProjectButtonActionPerformed

    private void addNewSourceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewSourceButtonActionPerformed
        NewSourceDialog newSourceDialog = new NewSourceDialog(this, true);
        newSourceDialog.setVisible(true);
    }//GEN-LAST:event_addNewSourceButtonActionPerformed

    private void owlFileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_owlFileChooserButtonActionPerformed
        if (this.existingMappingTextField.getText().length() > 0) {
            owlFileChooser.setCurrentDirectory(this.mappingFileChooser.getSelectedFile());
        }
        int returnVal = owlFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.existingOWLTextField.setText(owlFileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_owlFileChooserButtonActionPerformed

    private void mappingFileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mappingFileChooserButtonActionPerformed
        if (this.existingOWLTextField.getText().length() > 0) {
            this.mappingFileChooser.setCurrentDirectory(this.owlFileChooser.getSelectedFile());
        }
        int returnVal = mappingFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.existingMappingTextField.setText(mappingFileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_mappingFileChooserButtonActionPerformed

    public void updateDataSourcesList(IOArtifact newSource) {
        // Add new source
        ontoConstrCoord.addSource(newSource);

        // Refresh data sources list
        DefaultListModel jListModel = new DefaultListModel();
        for (IOArtifact source : ontoConstrCoord.getSources()) {
            jListModel.addElement(source.toString());
        }
        dataSourcesList.setModel(jListModel);
    }

    public void runMatchingAndMergingProcess(String matcherName) {
        ontoConstrCoord.runMatchingAndMergingProcess(matcherName);
    }

    public HashMap<String, ArrayList<String>> getMatcherResults(String matcherName) {
        return ontoConstrCoord.getMatcherResults(matcherName);
    }

    public void finalizeProgramOutput(String matcherName) {
        ontoConstrCoord.finalizeOntologyConstructionOutput(matcherName);
        errorMessageLabel.setText("Ontologies merged successfully. You may exit the program.");
    }

    public ArrayList<IOArtifact> getSources() {
        return ontoConstrCoord.getSources();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewSourceButton;
    private javax.swing.JLabel dataSourcesLabel;
    private javax.swing.JList dataSourcesList;
    private javax.swing.JLabel errorMessageLabel;
    private javax.swing.JTextField existingMappingTextField;
    private javax.swing.JLabel existingOWLLabel;
    private javax.swing.JTextField existingOWLTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel mappingExistingLabel;
    private javax.swing.JFileChooser mappingFileChooser;
    private javax.swing.JButton mappingFileChooserButton;
    private javax.swing.JFileChooser owlFileChooser;
    private javax.swing.JButton owlFileChooserButton;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField projectNameTextField;
    private javax.swing.JButton runProjectButton;
    // End of variables declaration//GEN-END:variables

}
