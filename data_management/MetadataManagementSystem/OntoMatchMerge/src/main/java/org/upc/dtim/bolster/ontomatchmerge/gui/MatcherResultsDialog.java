/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.upc.dtim.bolster.ontomatchmerge.gui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

import org.upc.dtim.bolster.ontomatchmerge.matching.OntologyMatchingCoordinator;

/**
 *
 * @author Rizkallah
 */
public class MatcherResultsDialog extends javax.swing.JDialog {

    private MainJFrame parent;

    /**
     * Creates new form MatcherResultsDialog
     */
    public MatcherResultsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centerWindow();

        this.parent = (MainJFrame) parent;

        createTableModelFromMatcherResults(matcher1Table, OntologyMatchingCoordinator.FALCON_ISUB_MATCHER);
        createTableModelFromMatcherResults(matcher2Table, OntologyMatchingCoordinator.FALCON_VDOC_MATCHER);
        createTableModelFromMatcherResults(matcher3Table, OntologyMatchingCoordinator.FALCON_COMBINED_MATCHER);
    }

    private void createTableModelFromMatcherResults(JTable jTable, String matcherName) {
        HashMap<String, ArrayList<String>> matcherResults = parent.getMatcherResults(matcherName);

        // Create Default Table Model
        DefaultTableModel dtm = new DefaultTableModel();
        int alignmentsCount = 0;
        for (String sourceName : matcherResults.keySet()) {
            dtm.addColumn(sourceName, matcherResults.get(sourceName).toArray());
            alignmentsCount = matcherResults.get(sourceName).size();
        }
        jTable.setModel(dtm);

        // Add Table Title
        JScrollPane jTableParent = (JScrollPane) jTable.getParent().getParent();
        jTableParent.setBorder(new TitledBorder(matcherName.replace("_", " ") + " [" + alignmentsCount + "]"));

        // Add matcher to matchersComboBox
        matchersComboBox.addItem(matcherName.replace("_", " "));
    }

    private void centerWindow() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        matcher1Table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        matcher2Table = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        matcher3Table = new javax.swing.JTable();
        matchersComboBox = new javax.swing.JComboBox();
        matchersComboBoxLabel = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ontology Matching Results");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        matcher1Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane1.setViewportView(matcher1Table);

    jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

    matcher2Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {},
            {},
            {},
            {}
        },
        new String [] {

        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane2.setViewportView(matcher2Table);

    jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

    matcher3Table.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {},
            {},
            {},
            {}
        },
        new String [] {

        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane3.setViewportView(matcher3Table);

    matchersComboBoxLabel.setText("Choose which matcher to keep");

    doneButton.setText("Done");
    doneButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            doneButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
            .addContainerGap())
        .addGroup(layout.createSequentialGroup()
            .addGap(197, 197, 197)
            .addComponent(matchersComboBoxLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(matchersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(doneButton)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(matchersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(matchersComboBoxLabel)
                .addComponent(doneButton))
            .addGap(18, 18, 18))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        dispose();
        parent.finalizeProgramOutput(matchersComboBox.getSelectedItem().toString().replace(" ", "_"));
    }//GEN-LAST:event_doneButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatcherResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatcherResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatcherResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatcherResultsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MatcherResultsDialog dialog = new MatcherResultsDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doneButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable matcher1Table;
    private javax.swing.JTable matcher2Table;
    private javax.swing.JTable matcher3Table;
    private javax.swing.JComboBox matchersComboBox;
    private javax.swing.JLabel matchersComboBoxLabel;
    // End of variables declaration//GEN-END:variables

}
